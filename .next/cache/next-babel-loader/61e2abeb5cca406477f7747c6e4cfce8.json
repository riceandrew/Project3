{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ricea\\\\ClassStuff\\\\practice\\\\React\\\\my-app\\\\components\\\\Map.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyDYz2JjXaniZAsJ0ZPDkUJ4XySzEn0B9vI\");\nGeocode.enableDebug();\n\nvar Map = /*#__PURE__*/function (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  var _super = _createSuper(Map);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      mapPosition: {\n        lat: _this.props.center.lat,\n        lng: _this.props.center.lng\n      },\n      markerPosition: {\n        lat: _this.props.center.lat,\n        lng: _this.props.center.lng\n      }\n    };\n    return _this;\n  }\n  /**\r\n    * Get the current address from the default map position and set those values in the state\r\n    */\n\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Geocode.fromLatLng(this.state.mapPosition.lat, this.state.mapPosition.lng).then(function (response) {\n        var address = response.results[0].formatted_address,\n            addressArray = response.results[0].address_components,\n            city = _this2.getCity(addressArray),\n            area = _this2.getArea(addressArray),\n            state = _this2.getState(addressArray);\n\n        console.log('city', city, area, state);\n\n        _this2.setState({\n          address: address ? address : '',\n          area: area ? area : '',\n          city: city ? city : '',\n          state: state ? state : ''\n        });\n      }, function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var AsyncMap = withScriptjs(withGoogleMap(function (props) {\n        return __jsx(GoogleMap, {\n          google: _this3.props.google,\n          defaultZoom: _this3.props.zoom,\n          defaultCenter: {\n            lat: _this3.state.mapPosition.lat,\n            lng: _this3.state.mapPosition.lng\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 6\n          }\n        });\n      }));\n      var map;\n\n      if (this.props.center.lat !== undefined) {\n        map = __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 10\n          }\n        }, __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 6\n          }\n        }, __jsx(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }\n        }, __jsx(\"label\", {\n          htmlFor: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 8\n          }\n        }, \"City\"), __jsx(\"input\", {\n          type: \"text\",\n          name: \"city\",\n          className: \"form-control\",\n          onChange: this.onChange,\n          readOnly: \"readOnly\",\n          value: this.state.city,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 8\n          }\n        })), __jsx(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }\n        }, __jsx(\"label\", {\n          htmlFor: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 8\n          }\n        }, \"Area\"), __jsx(\"input\", {\n          type: \"text\",\n          name: \"area\",\n          className: \"form-control\",\n          onChange: this.onChange,\n          readOnly: \"readOnly\",\n          value: this.state.area,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 8\n          }\n        })), __jsx(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }\n        }, __jsx(\"label\", {\n          htmlFor: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 8\n          }\n        }, \"State\"), __jsx(\"input\", {\n          type: \"text\",\n          name: \"state\",\n          className: \"form-control\",\n          onChange: this.onChange,\n          readOnly: \"readOnly\",\n          value: this.state.state,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 8\n          }\n        })), __jsx(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }\n        }, __jsx(\"label\", {\n          htmlFor: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 8\n          }\n        }, \"Address\"), __jsx(\"input\", {\n          type: \"text\",\n          name: \"address\",\n          className: \"form-control\",\n          onChange: this.onChange,\n          readOnly: \"readOnly\",\n          value: this.state.address,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 8\n          }\n        }))), __jsx(AsyncMap, {\n          googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDYz2JjXaniZAsJ0ZPDkUJ4XySzEn0B9vI&libraries=places\",\n          loadingElement: __jsx(\"div\", {\n            style: {\n              height: \"100%\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 8\n            }\n          }),\n          containerElement: __jsx(\"div\", {\n            style: {\n              height: this.props.height\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 8\n            }\n          }),\n          mapElement: __jsx(\"div\", {\n            style: {\n              height: \"100%\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 8\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 6\n          }\n        }));\n      } else {\n        map = __jsx(\"div\", {\n          style: {\n            height: this.props.height\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 10\n          }\n        });\n      }\n\n      return map;\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\nexport default Map;","map":{"version":3,"sources":["C:/Users/ricea/ClassStuff/practice/React/my-app/components/Map.js"],"names":["React","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Autocomplete","Geocode","setApiKey","enableDebug","Map","props","state","address","city","area","mapPosition","lat","center","lng","markerPosition","fromLatLng","then","response","results","formatted_address","addressArray","address_components","getCity","getArea","getState","console","log","setState","error","AsyncMap","google","zoom","map","undefined","onChange","height","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport Geocode from \"react-geocode\";\r\nGeocode.setApiKey(\"AIzaSyDYz2JjXaniZAsJ0ZPDkUJ4XySzEn0B9vI\");\r\nGeocode.enableDebug();\r\nclass Map extends React.Component{\r\nconstructor( props ){\r\n  super( props );\r\n  this.state = {\r\n   address: '',\r\n   city: '',\r\n   area: '',\r\n   state: '',\r\n   mapPosition: {\r\n    lat: this.props.center.lat,\r\n    lng: this.props.center.lng\r\n   },\r\n   markerPosition: {\r\n    lat: this.props.center.lat,\r\n    lng: this.props.center.lng\r\n}\r\n  }\r\n }\r\n/**\r\n  * Get the current address from the default map position and set those values in the state\r\n  */\r\n componentDidMount() {\r\n  Geocode.fromLatLng( this.state.mapPosition.lat , this.state.mapPosition.lng ).then(\r\n   response => {\r\n    const address = response.results[0].formatted_address,\r\n     addressArray =  response.results[0].address_components,\r\n     city = this.getCity( addressArray ),\r\n     area = this.getArea( addressArray ),\r\n     state = this.getState( addressArray );\r\n  \r\n    console.log( 'city', city, area, state );\r\n  \r\n    this.setState( {\r\n     address: ( address ) ? address : '',\r\n     area: ( area ) ? area : '',\r\n     city: ( city ) ? city : '',\r\n     state: ( state ) ? state : '',\r\n    } )\r\n   },\r\n   error => {\r\n    console.error(error);\r\n   }\r\n  );\r\n };\r\n\r\nrender(){\r\nconst AsyncMap = withScriptjs(\r\n   withGoogleMap(\r\n    props => (\r\n     <GoogleMap google={this.props.google}\r\n      defaultZoom={this.props.zoom}\r\n      defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n     >\r\n</GoogleMap>\r\n)\r\n   )\r\n  );\r\nlet map;\r\n  if( this.props.center.lat !== undefined ) {\r\n   map = <div>\r\n     <div>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"\">City</label>\r\n       <input type=\"text\" name=\"city\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.city }/>\r\n      </div>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"\">Area</label>\r\n       <input type=\"text\" name=\"area\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.area }/>\r\n      </div>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"\">State</label>\r\n       <input type=\"text\" name=\"state\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.state }/>\r\n      </div>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"\">Address</label>\r\n       <input type=\"text\" name=\"address\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.address }/>\r\n      </div>\r\n     </div>\r\n     \r\n     <AsyncMap\r\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDYz2JjXaniZAsJ0ZPDkUJ4XySzEn0B9vI&libraries=places\"\r\n      loadingElement={\r\n       <div style={{ height: `100%` }} />\r\n      }\r\n      containerElement={\r\n       <div style={{ height: this.props.height }} />\r\n      }\r\n      mapElement={\r\n       <div style={{ height: `100%` }} />\r\n      }\r\n     />\r\n    </div>\r\n} else {\r\n   map = <div style={{height: this.props.height}} />\r\n  }\r\n  return( map )\r\n }\r\n}\r\nexport default Map"]},"metadata":{},"sourceType":"module"}